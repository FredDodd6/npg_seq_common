#!/usr/bin/env perl
#########
# Author:        Marina Gourtovaia
# Maintainer:    $Author$
# Created:       03 February 2010
# Last Modified: $Date$
# Id:            $Id$
# $HeadURL$

use strict;
use warnings;
use File::Spec;
use Carp;
use English qw(-no_match_vars);
use Cwd;
use FindBin qw($Bin);
use lib ( -d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5" : "$Bin/../lib" );

use npg_common::sequence::reference::base_count;

use Readonly; Readonly::Scalar our $VERSION => do { my ($r) = q$Revision$ =~ /(\d+)/smx; $r; };

# This script runs correctly if the working directory is above
# the fasta directory


my $dir = q[npgqc];
if (!-e $dir) {
    mkdir $dir;
}

my $ref_path = q[];

# read the fasta directory and get the file name with the reference
my $fasta_dir = q[fasta];
opendir my $dh, $fasta_dir or croak $ERRNO;
my @files = readdir $dh;
closedir $dh or croak $ERRNO;

my $fasta_name;

for my $file (@files) {
    if ($file =~ /[.]fa$/ismx || $file =~ /[.]fasta$/ismx) {
        $ref_path =  File::Spec->catfile($fasta_dir, $file);
        $fasta_name = $file;
        last;
    }
}

if (!$ref_path) {
    croak cwd . q[: reference file with .fa or .fasta extension not found in ]
              . $fasta_dir;
}

my $bc = npg_common::sequence::reference::base_count->new(
                                     reference_path => $ref_path,
                                 );
$bc->run;
$bc->store(File::Spec->catfile($dir, $fasta_name . q[.json]));

1;

__END__
